on:
  workflow_call:
    inputs:
      environment: { required: true, type: string }
      app_name:    { required: true, type: string }
      image_tag:   { required: true, type: string }
      config_file: { required: false, type: string, default: "config.yaml" }
      vcpu:        { required: false, type: string, default: "2" }
      memory:      { required: false, type: string, default: "2048" }
      disk_size:   { required: false, type: string, default: "10" }
    secrets:
      PHALA_CLOUD_API_KEY:          { required: true }
      PHALA_APP_ID:                 { required: true }
      DOCKER_IMAGE:                 { required: true }
      DSTACK_AWS_ACCESS_KEY_ID:     { required: true }
      DSTACK_AWS_SECRET_ACCESS_KEY: { required: true }
      DSTACK_AWS_REGION:            { required: true }
      DSTACK_AWS_ECR_REGISTRY:      { required: true }

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      APP_NAME:    ${{ inputs.app_name }}
      DOCKER_TAG:  ${{ inputs.image_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Render docker-compose for deployment
        id: render
        shell: bash
        env:
          FULL_IMAGE: ${{ secrets.DOCKER_IMAGE }}:${{ inputs.image_tag }}
          APP_NAME:   ${{ inputs.app_name }}
          DSTACK_AWS_ACCESS_KEY_ID:      ${{ secrets.DSTACK_AWS_ACCESS_KEY_ID }}
          DSTACK_AWS_SECRET_ACCESS_KEY: ${{ secrets.DSTACK_AWS_SECRET_ACCESS_KEY }}
          DSTACK_AWS_REGION:             ${{ secrets.DSTACK_AWS_REGION }}
          DSTACK_AWS_ECR_REGISTRY:       ${{ secrets.DSTACK_AWS_ECR_REGISTRY }}
        run: |
          set -euo pipefail
          esc() { printf '%s' "$1" | sed -e 's/[\/&]/\\&/g'; }
          cp docker-compose.yml docker-compose.rendered.yml

          sed -E -i "s|\$\{DOCKER_IMAGE\}|$(esc "$FULL_IMAGE")|g" docker-compose.rendered.yml
          sed -E -i "s|container_name:\s*\$\{APP_NAME(:-[^}]*)?\}|container_name: $(esc "$APP_NAME")|g" docker-compose.rendered.yml
          sed -E -i "s|\$\{DSTACK_AWS_ACCESS_KEY_ID(:-[^}]*)?\}|$(esc "$DSTACK_AWS_ACCESS_KEY_ID")|g" docker-compose.rendered.yml
          sed -E -i "s|\$\{DSTACK_AWS_SECRET_ACCESS_KEY(:-[^}]*)?\}|$(esc "$DSTACK_AWS_SECRET_ACCESS_KEY")|g" docker-compose.rendered.yml
          sed -E -i "s|\$\{DSTACK_AWS_REGION(:-[^}]*)?\}|$(esc "$DSTACK_AWS_REGION")|g" docker-compose.rendered.yml
          sed -E -i "s|\$\{DSTACK_AWS_ECR_REGISTRY(:-[^}]*)?\}|$(esc "$DSTACK_AWS_ECR_REGISTRY")|g" docker-compose.rendered.yml

          echo "compose=docker-compose.rendered.yml" >> "$GITHUB_OUTPUT"

      - name: Deploy to Phala Cloud
        uses: Leechael/phala-deploy-action@v2
        with:
          phala-api-key: ${{ secrets.PHALA_CLOUD_API_KEY }}
          app-id:        ${{ secrets.PHALA_APP_ID }}
          cvm-name:      ${{ inputs.app_name }}
          compose-file:  ${{ steps.render.outputs.compose }}
          vcpu:          ${{ inputs.vcpu }}
          memory:        ${{ inputs.memory }}
          disk-size:     ${{ inputs.disk_size }}
